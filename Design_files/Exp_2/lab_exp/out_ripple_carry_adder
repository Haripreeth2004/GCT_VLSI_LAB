#! /usr/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
S_0x5a061140d690 .scope module, "tb_ripple_carry_adder" "tb_ripple_carry_adder" 2 1;
 .timescale 0 0;
v0x5a0611432760_0 .var "a", 7 0;
v0x5a0611432840_0 .var "b", 7 0;
v0x5a0611432910_0 .var "cin", 0 0;
v0x5a0611432a30_0 .net "cout", 0 0, L_0x5a0611437db0;  1 drivers
v0x5a0611432ad0_0 .net "sum", 7 0, L_0x5a0611437540;  1 drivers
S_0x5a061140b750 .scope module, "uut" "ripple_carry_adder" 2 10, 3 11 0, S_0x5a061140d690;
 .timescale 0 0;
    .port_info 0 /INPUT 8 "a";
    .port_info 1 /INPUT 8 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 8 "sum";
    .port_info 4 /OUTPUT 1 "cout";
v0x5a06114321d0_0 .net "a", 7 0, v0x5a0611432760_0;  1 drivers
v0x5a06114322d0_0 .net "b", 7 0, v0x5a0611432840_0;  1 drivers
v0x5a06114323b0_0 .net "carry", 7 0, L_0x5a0611437930;  1 drivers
v0x5a0611432470_0 .net "cin", 0 0, v0x5a0611432910_0;  1 drivers
v0x5a0611432540_0 .net "cout", 0 0, L_0x5a0611437db0;  alias, 1 drivers
v0x5a06114325e0_0 .net "sum", 7 0, L_0x5a0611437540;  alias, 1 drivers
L_0x5a06114332b0 .part v0x5a0611432760_0, 1, 1;
L_0x5a06114333e0 .part v0x5a0611432840_0, 1, 1;
L_0x5a0611433510 .part L_0x5a0611437930, 0, 1;
L_0x5a0611433bf0 .part v0x5a0611432760_0, 2, 1;
L_0x5a0611433d50 .part v0x5a0611432840_0, 2, 1;
L_0x5a0611433e80 .part L_0x5a0611437930, 1, 1;
L_0x5a0611434550 .part v0x5a0611432760_0, 3, 1;
L_0x5a0611434710 .part v0x5a0611432840_0, 3, 1;
L_0x5a0611434920 .part L_0x5a0611437930, 2, 1;
L_0x5a0611434ec0 .part v0x5a0611432760_0, 4, 1;
L_0x5a0611435050 .part v0x5a0611432840_0, 4, 1;
L_0x5a0611435180 .part L_0x5a0611437930, 3, 1;
L_0x5a0611435850 .part v0x5a0611432760_0, 5, 1;
L_0x5a0611435980 .part v0x5a0611432840_0, 5, 1;
L_0x5a0611435b30 .part L_0x5a0611437930, 4, 1;
L_0x5a0611436130 .part v0x5a0611432760_0, 6, 1;
L_0x5a06114362f0 .part v0x5a0611432840_0, 6, 1;
L_0x5a0611436420 .part L_0x5a0611437930, 5, 1;
L_0x5a0611436b30 .part v0x5a0611432760_0, 7, 1;
L_0x5a0611436bd0 .part v0x5a0611432840_0, 7, 1;
L_0x5a0611436550 .part L_0x5a0611437930, 6, 1;
L_0x5a0611437220 .part v0x5a0611432760_0, 0, 1;
L_0x5a0611437410 .part v0x5a0611432840_0, 0, 1;
LS_0x5a0611437540_0_0 .concat8 [ 1 1 1 1], L_0x5a0611436d90, L_0x5a0611432cc0, L_0x5a06114336b0, L_0x5a0611434060;
LS_0x5a0611437540_0_4 .concat8 [ 1 1 1 1], L_0x5a0611434ac0, L_0x5a0611435420, L_0x5a0611435c60, L_0x5a0611436660;
L_0x5a0611437540 .concat8 [ 4 4 0 0], LS_0x5a0611437540_0_0, LS_0x5a0611437540_0_4;
LS_0x5a0611437930_0_0 .concat8 [ 1 1 1 1], L_0x5a0611437110, L_0x5a06114331a0, L_0x5a0611433ae0, L_0x5a0611434440;
LS_0x5a0611437930_0_4 .concat8 [ 1 1 1 1], L_0x5a0611434db0, L_0x5a0611435740, L_0x5a0611436020, L_0x5a0611436a20;
L_0x5a0611437930 .concat8 [ 4 4 0 0], LS_0x5a0611437930_0_0, LS_0x5a0611437930_0_4;
L_0x5a0611437db0 .part L_0x5a0611437930, 7, 1;
S_0x5a061140cb80 .scope generate, "adder_loop[1]" "adder_loop[1]" 3 32, 3 32 0, S_0x5a061140b750;
 .timescale 0 0;
P_0x5a061140d0d0 .param/l "i" 1 3 32, +C4<01>;
S_0x5a0611408930 .scope module, "fa" "full_adder" 3 33, 3 1 0, S_0x5a061140cb80;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x5a0611432bc0 .functor XOR 1, L_0x5a06114332b0, L_0x5a06114333e0, C4<0>, C4<0>;
L_0x5a0611432cc0 .functor XOR 1, L_0x5a0611432bc0, L_0x5a0611433510, C4<0>, C4<0>;
L_0x5a0611432db0 .functor AND 1, L_0x5a06114332b0, L_0x5a06114333e0, C4<1>, C4<1>;
L_0x5a0611432ef0 .functor AND 1, L_0x5a06114333e0, L_0x5a0611433510, C4<1>, C4<1>;
L_0x5a0611432fe0 .functor OR 1, L_0x5a0611432db0, L_0x5a0611432ef0, C4<0>, C4<0>;
L_0x5a06114330f0 .functor AND 1, L_0x5a0611433510, L_0x5a06114332b0, C4<1>, C4<1>;
L_0x5a06114331a0 .functor OR 1, L_0x5a0611432fe0, L_0x5a06114330f0, C4<0>, C4<0>;
v0x5a0611405300_0 .net *"_ivl_0", 0 0, L_0x5a0611432bc0;  1 drivers
v0x5a06114024e0_0 .net *"_ivl_10", 0 0, L_0x5a06114330f0;  1 drivers
v0x5a06113f5650_0 .net *"_ivl_4", 0 0, L_0x5a0611432db0;  1 drivers
v0x5a06113f2830_0 .net *"_ivl_6", 0 0, L_0x5a0611432ef0;  1 drivers
v0x5a06113ef9e0_0 .net *"_ivl_8", 0 0, L_0x5a0611432fe0;  1 drivers
v0x5a061140da70_0 .net "a", 0 0, L_0x5a06114332b0;  1 drivers
v0x5a061142bc80_0 .net "b", 0 0, L_0x5a06114333e0;  1 drivers
v0x5a061142bd40_0 .net "cin", 0 0, L_0x5a0611433510;  1 drivers
v0x5a061142be00_0 .net "cout", 0 0, L_0x5a06114331a0;  1 drivers
v0x5a061142bec0_0 .net "sum", 0 0, L_0x5a0611432cc0;  1 drivers
S_0x5a061142c020 .scope generate, "adder_loop[2]" "adder_loop[2]" 3 32, 3 32 0, S_0x5a061140b750;
 .timescale 0 0;
P_0x5a061142c1f0 .param/l "i" 1 3 32, +C4<010>;
S_0x5a061142c2b0 .scope module, "fa" "full_adder" 3 33, 3 1 0, S_0x5a061142c020;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x5a0611433640 .functor XOR 1, L_0x5a0611433bf0, L_0x5a0611433d50, C4<0>, C4<0>;
L_0x5a06114336b0 .functor XOR 1, L_0x5a0611433640, L_0x5a0611433e80, C4<0>, C4<0>;
L_0x5a0611433720 .functor AND 1, L_0x5a0611433bf0, L_0x5a0611433d50, C4<1>, C4<1>;
L_0x5a0611433830 .functor AND 1, L_0x5a0611433d50, L_0x5a0611433e80, C4<1>, C4<1>;
L_0x5a0611433920 .functor OR 1, L_0x5a0611433720, L_0x5a0611433830, C4<0>, C4<0>;
L_0x5a0611433a30 .functor AND 1, L_0x5a0611433e80, L_0x5a0611433bf0, C4<1>, C4<1>;
L_0x5a0611433ae0 .functor OR 1, L_0x5a0611433920, L_0x5a0611433a30, C4<0>, C4<0>;
v0x5a061142c490_0 .net *"_ivl_0", 0 0, L_0x5a0611433640;  1 drivers
v0x5a061142c590_0 .net *"_ivl_10", 0 0, L_0x5a0611433a30;  1 drivers
v0x5a061142c670_0 .net *"_ivl_4", 0 0, L_0x5a0611433720;  1 drivers
v0x5a061142c730_0 .net *"_ivl_6", 0 0, L_0x5a0611433830;  1 drivers
v0x5a061142c810_0 .net *"_ivl_8", 0 0, L_0x5a0611433920;  1 drivers
v0x5a061142c940_0 .net "a", 0 0, L_0x5a0611433bf0;  1 drivers
v0x5a061142ca00_0 .net "b", 0 0, L_0x5a0611433d50;  1 drivers
v0x5a061142cac0_0 .net "cin", 0 0, L_0x5a0611433e80;  1 drivers
v0x5a061142cb80_0 .net "cout", 0 0, L_0x5a0611433ae0;  1 drivers
v0x5a061142ccd0_0 .net "sum", 0 0, L_0x5a06114336b0;  1 drivers
S_0x5a061142ce30 .scope generate, "adder_loop[3]" "adder_loop[3]" 3 32, 3 32 0, S_0x5a061140b750;
 .timescale 0 0;
P_0x5a061142cfe0 .param/l "i" 1 3 32, +C4<011>;
S_0x5a061142d0a0 .scope module, "fa" "full_adder" 3 33, 3 1 0, S_0x5a061142ce30;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x5a0611433ff0 .functor XOR 1, L_0x5a0611434550, L_0x5a0611434710, C4<0>, C4<0>;
L_0x5a0611434060 .functor XOR 1, L_0x5a0611433ff0, L_0x5a0611434920, C4<0>, C4<0>;
L_0x5a06114340d0 .functor AND 1, L_0x5a0611434550, L_0x5a0611434710, C4<1>, C4<1>;
L_0x5a0611434190 .functor AND 1, L_0x5a0611434710, L_0x5a0611434920, C4<1>, C4<1>;
L_0x5a0611434280 .functor OR 1, L_0x5a06114340d0, L_0x5a0611434190, C4<0>, C4<0>;
L_0x5a0611434390 .functor AND 1, L_0x5a0611434920, L_0x5a0611434550, C4<1>, C4<1>;
L_0x5a0611434440 .functor OR 1, L_0x5a0611434280, L_0x5a0611434390, C4<0>, C4<0>;
v0x5a061142d280_0 .net *"_ivl_0", 0 0, L_0x5a0611433ff0;  1 drivers
v0x5a061142d380_0 .net *"_ivl_10", 0 0, L_0x5a0611434390;  1 drivers
v0x5a061142d460_0 .net *"_ivl_4", 0 0, L_0x5a06114340d0;  1 drivers
v0x5a061142d550_0 .net *"_ivl_6", 0 0, L_0x5a0611434190;  1 drivers
v0x5a061142d630_0 .net *"_ivl_8", 0 0, L_0x5a0611434280;  1 drivers
v0x5a061142d760_0 .net "a", 0 0, L_0x5a0611434550;  1 drivers
v0x5a061142d820_0 .net "b", 0 0, L_0x5a0611434710;  1 drivers
v0x5a061142d8e0_0 .net "cin", 0 0, L_0x5a0611434920;  1 drivers
v0x5a061142d9a0_0 .net "cout", 0 0, L_0x5a0611434440;  1 drivers
v0x5a061142daf0_0 .net "sum", 0 0, L_0x5a0611434060;  1 drivers
S_0x5a061142dc50 .scope generate, "adder_loop[4]" "adder_loop[4]" 3 32, 3 32 0, S_0x5a061140b750;
 .timescale 0 0;
P_0x5a061142de00 .param/l "i" 1 3 32, +C4<0100>;
S_0x5a061142dee0 .scope module, "fa" "full_adder" 3 33, 3 1 0, S_0x5a061142dc50;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x5a0611434a50 .functor XOR 1, L_0x5a0611434ec0, L_0x5a0611435050, C4<0>, C4<0>;
L_0x5a0611434ac0 .functor XOR 1, L_0x5a0611434a50, L_0x5a0611435180, C4<0>, C4<0>;
L_0x5a0611434b30 .functor AND 1, L_0x5a0611434ec0, L_0x5a0611435050, C4<1>, C4<1>;
L_0x5a0611434ba0 .functor AND 1, L_0x5a0611435050, L_0x5a0611435180, C4<1>, C4<1>;
L_0x5a0611434c40 .functor OR 1, L_0x5a0611434b30, L_0x5a0611434ba0, C4<0>, C4<0>;
L_0x5a0611434d00 .functor AND 1, L_0x5a0611435180, L_0x5a0611434ec0, C4<1>, C4<1>;
L_0x5a0611434db0 .functor OR 1, L_0x5a0611434c40, L_0x5a0611434d00, C4<0>, C4<0>;
v0x5a061142e0c0_0 .net *"_ivl_0", 0 0, L_0x5a0611434a50;  1 drivers
v0x5a061142e1c0_0 .net *"_ivl_10", 0 0, L_0x5a0611434d00;  1 drivers
v0x5a061142e2a0_0 .net *"_ivl_4", 0 0, L_0x5a0611434b30;  1 drivers
v0x5a061142e390_0 .net *"_ivl_6", 0 0, L_0x5a0611434ba0;  1 drivers
v0x5a061142e470_0 .net *"_ivl_8", 0 0, L_0x5a0611434c40;  1 drivers
v0x5a061142e5a0_0 .net "a", 0 0, L_0x5a0611434ec0;  1 drivers
v0x5a061142e660_0 .net "b", 0 0, L_0x5a0611435050;  1 drivers
v0x5a061142e720_0 .net "cin", 0 0, L_0x5a0611435180;  1 drivers
v0x5a061142e7e0_0 .net "cout", 0 0, L_0x5a0611434db0;  1 drivers
v0x5a061142e930_0 .net "sum", 0 0, L_0x5a0611434ac0;  1 drivers
S_0x5a061142ea90 .scope generate, "adder_loop[5]" "adder_loop[5]" 3 32, 3 32 0, S_0x5a061140b750;
 .timescale 0 0;
P_0x5a061142ec90 .param/l "i" 1 3 32, +C4<0101>;
S_0x5a061142ed70 .scope module, "fa" "full_adder" 3 33, 3 1 0, S_0x5a061142ea90;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x5a06114353b0 .functor XOR 1, L_0x5a0611435850, L_0x5a0611435980, C4<0>, C4<0>;
L_0x5a0611435420 .functor XOR 1, L_0x5a06114353b0, L_0x5a0611435b30, C4<0>, C4<0>;
L_0x5a0611435490 .functor AND 1, L_0x5a0611435850, L_0x5a0611435980, C4<1>, C4<1>;
L_0x5a0611435530 .functor AND 1, L_0x5a0611435980, L_0x5a0611435b30, C4<1>, C4<1>;
L_0x5a06114355d0 .functor OR 1, L_0x5a0611435490, L_0x5a0611435530, C4<0>, C4<0>;
L_0x5a0611435690 .functor AND 1, L_0x5a0611435b30, L_0x5a0611435850, C4<1>, C4<1>;
L_0x5a0611435740 .functor OR 1, L_0x5a06114355d0, L_0x5a0611435690, C4<0>, C4<0>;
v0x5a061142ef50_0 .net *"_ivl_0", 0 0, L_0x5a06114353b0;  1 drivers
v0x5a061142f050_0 .net *"_ivl_10", 0 0, L_0x5a0611435690;  1 drivers
v0x5a061142f130_0 .net *"_ivl_4", 0 0, L_0x5a0611435490;  1 drivers
v0x5a061142f1f0_0 .net *"_ivl_6", 0 0, L_0x5a0611435530;  1 drivers
v0x5a061142f2d0_0 .net *"_ivl_8", 0 0, L_0x5a06114355d0;  1 drivers
v0x5a061142f400_0 .net "a", 0 0, L_0x5a0611435850;  1 drivers
v0x5a061142f4c0_0 .net "b", 0 0, L_0x5a0611435980;  1 drivers
v0x5a061142f580_0 .net "cin", 0 0, L_0x5a0611435b30;  1 drivers
v0x5a061142f640_0 .net "cout", 0 0, L_0x5a0611435740;  1 drivers
v0x5a061142f790_0 .net "sum", 0 0, L_0x5a0611435420;  1 drivers
S_0x5a061142f8f0 .scope generate, "adder_loop[6]" "adder_loop[6]" 3 32, 3 32 0, S_0x5a061140b750;
 .timescale 0 0;
P_0x5a061142faa0 .param/l "i" 1 3 32, +C4<0110>;
S_0x5a061142fb80 .scope module, "fa" "full_adder" 3 33, 3 1 0, S_0x5a061142f8f0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x5a0611435340 .functor XOR 1, L_0x5a0611436130, L_0x5a06114362f0, C4<0>, C4<0>;
L_0x5a0611435c60 .functor XOR 1, L_0x5a0611435340, L_0x5a0611436420, C4<0>, C4<0>;
L_0x5a0611435cd0 .functor AND 1, L_0x5a0611436130, L_0x5a06114362f0, C4<1>, C4<1>;
L_0x5a0611435d70 .functor AND 1, L_0x5a06114362f0, L_0x5a0611436420, C4<1>, C4<1>;
L_0x5a0611435e60 .functor OR 1, L_0x5a0611435cd0, L_0x5a0611435d70, C4<0>, C4<0>;
L_0x5a0611435f70 .functor AND 1, L_0x5a0611436420, L_0x5a0611436130, C4<1>, C4<1>;
L_0x5a0611436020 .functor OR 1, L_0x5a0611435e60, L_0x5a0611435f70, C4<0>, C4<0>;
v0x5a061142fd60_0 .net *"_ivl_0", 0 0, L_0x5a0611435340;  1 drivers
v0x5a061142fe60_0 .net *"_ivl_10", 0 0, L_0x5a0611435f70;  1 drivers
v0x5a061142ff40_0 .net *"_ivl_4", 0 0, L_0x5a0611435cd0;  1 drivers
v0x5a0611430030_0 .net *"_ivl_6", 0 0, L_0x5a0611435d70;  1 drivers
v0x5a0611430110_0 .net *"_ivl_8", 0 0, L_0x5a0611435e60;  1 drivers
v0x5a0611430240_0 .net "a", 0 0, L_0x5a0611436130;  1 drivers
v0x5a0611430300_0 .net "b", 0 0, L_0x5a06114362f0;  1 drivers
v0x5a06114303c0_0 .net "cin", 0 0, L_0x5a0611436420;  1 drivers
v0x5a0611430480_0 .net "cout", 0 0, L_0x5a0611436020;  1 drivers
v0x5a06114305d0_0 .net "sum", 0 0, L_0x5a0611435c60;  1 drivers
S_0x5a0611430730 .scope generate, "adder_loop[7]" "adder_loop[7]" 3 32, 3 32 0, S_0x5a061140b750;
 .timescale 0 0;
P_0x5a06114308e0 .param/l "i" 1 3 32, +C4<0111>;
S_0x5a06114309c0 .scope module, "fa" "full_adder" 3 33, 3 1 0, S_0x5a0611430730;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x5a06114365f0 .functor XOR 1, L_0x5a0611436b30, L_0x5a0611436bd0, C4<0>, C4<0>;
L_0x5a0611436660 .functor XOR 1, L_0x5a06114365f0, L_0x5a0611436550, C4<0>, C4<0>;
L_0x5a06114366d0 .functor AND 1, L_0x5a0611436b30, L_0x5a0611436bd0, C4<1>, C4<1>;
L_0x5a0611436770 .functor AND 1, L_0x5a0611436bd0, L_0x5a0611436550, C4<1>, C4<1>;
L_0x5a0611436860 .functor OR 1, L_0x5a06114366d0, L_0x5a0611436770, C4<0>, C4<0>;
L_0x5a0611436970 .functor AND 1, L_0x5a0611436550, L_0x5a0611436b30, C4<1>, C4<1>;
L_0x5a0611436a20 .functor OR 1, L_0x5a0611436860, L_0x5a0611436970, C4<0>, C4<0>;
v0x5a0611430c20_0 .net *"_ivl_0", 0 0, L_0x5a06114365f0;  1 drivers
v0x5a0611430d20_0 .net *"_ivl_10", 0 0, L_0x5a0611436970;  1 drivers
v0x5a0611430e00_0 .net *"_ivl_4", 0 0, L_0x5a06114366d0;  1 drivers
v0x5a0611430ef0_0 .net *"_ivl_6", 0 0, L_0x5a0611436770;  1 drivers
v0x5a0611430fd0_0 .net *"_ivl_8", 0 0, L_0x5a0611436860;  1 drivers
v0x5a0611431100_0 .net "a", 0 0, L_0x5a0611436b30;  1 drivers
v0x5a06114311c0_0 .net "b", 0 0, L_0x5a0611436bd0;  1 drivers
v0x5a0611431280_0 .net "cin", 0 0, L_0x5a0611436550;  1 drivers
v0x5a0611431340_0 .net "cout", 0 0, L_0x5a0611436a20;  1 drivers
v0x5a0611431490_0 .net "sum", 0 0, L_0x5a0611436660;  1 drivers
S_0x5a06114315f0 .scope module, "fa0" "full_adder" 3 21, 3 1 0, S_0x5a061140b750;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x5a0611436d20 .functor XOR 1, L_0x5a0611437220, L_0x5a0611437410, C4<0>, C4<0>;
L_0x5a0611436d90 .functor XOR 1, L_0x5a0611436d20, v0x5a0611432910_0, C4<0>, C4<0>;
L_0x5a0611436e00 .functor AND 1, L_0x5a0611437220, L_0x5a0611437410, C4<1>, C4<1>;
L_0x5a0611436e70 .functor AND 1, L_0x5a0611437410, v0x5a0611432910_0, C4<1>, C4<1>;
L_0x5a0611436fa0 .functor OR 1, L_0x5a0611436e00, L_0x5a0611436e70, C4<0>, C4<0>;
L_0x5a0611437060 .functor AND 1, v0x5a0611432910_0, L_0x5a0611437220, C4<1>, C4<1>;
L_0x5a0611437110 .functor OR 1, L_0x5a0611436fa0, L_0x5a0611437060, C4<0>, C4<0>;
v0x5a0611431800_0 .net *"_ivl_0", 0 0, L_0x5a0611436d20;  1 drivers
v0x5a0611431900_0 .net *"_ivl_10", 0 0, L_0x5a0611437060;  1 drivers
v0x5a06114319e0_0 .net *"_ivl_4", 0 0, L_0x5a0611436e00;  1 drivers
v0x5a0611431ad0_0 .net *"_ivl_6", 0 0, L_0x5a0611436e70;  1 drivers
v0x5a0611431bb0_0 .net *"_ivl_8", 0 0, L_0x5a0611436fa0;  1 drivers
v0x5a0611431ce0_0 .net "a", 0 0, L_0x5a0611437220;  1 drivers
v0x5a0611431da0_0 .net "b", 0 0, L_0x5a0611437410;  1 drivers
v0x5a0611431e60_0 .net "cin", 0 0, v0x5a0611432910_0;  alias, 1 drivers
v0x5a0611431f20_0 .net "cout", 0 0, L_0x5a0611437110;  1 drivers
v0x5a0611432070_0 .net "sum", 0 0, L_0x5a0611436d90;  1 drivers
    .scope S_0x5a061140d690;
T_0 ;
    %pushi/vec4 1, 0, 8;
    %store/vec4 v0x5a0611432760_0, 0, 8;
    %pushi/vec4 1, 0, 8;
    %store/vec4 v0x5a0611432840_0, 0, 8;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5a0611432910_0, 0, 1;
    %delay 10, 0;
    %vpi_call 2 25 "$display", "a = %b, b = %b, cin = %b, sum = %b, cout = %b", v0x5a0611432760_0, v0x5a0611432840_0, v0x5a0611432910_0, v0x5a0611432ad0_0, v0x5a0611432a30_0 {0 0 0};
    %pushi/vec4 255, 0, 8;
    %store/vec4 v0x5a0611432760_0, 0, 8;
    %pushi/vec4 1, 0, 8;
    %store/vec4 v0x5a0611432840_0, 0, 8;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5a0611432910_0, 0, 1;
    %delay 10, 0;
    %vpi_call 2 32 "$display", "a = %b, b = %b, cin = %b, sum = %b, cout = %b", v0x5a0611432760_0, v0x5a0611432840_0, v0x5a0611432910_0, v0x5a0611432ad0_0, v0x5a0611432a30_0 {0 0 0};
    %pushi/vec4 170, 0, 8;
    %store/vec4 v0x5a0611432760_0, 0, 8;
    %pushi/vec4 85, 0, 8;
    %store/vec4 v0x5a0611432840_0, 0, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5a0611432910_0, 0, 1;
    %delay 10, 0;
    %vpi_call 2 39 "$display", "a = %b, b = %b, cin = %b, sum = %b, cout = %b", v0x5a0611432760_0, v0x5a0611432840_0, v0x5a0611432910_0, v0x5a0611432ad0_0, v0x5a0611432a30_0 {0 0 0};
    %pushi/vec4 240, 0, 8;
    %store/vec4 v0x5a0611432760_0, 0, 8;
    %pushi/vec4 15, 0, 8;
    %store/vec4 v0x5a0611432840_0, 0, 8;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5a0611432910_0, 0, 1;
    %delay 10, 0;
    %vpi_call 2 46 "$display", "a = %b, b = %b, cin = %b, sum = %b, cout = %b", v0x5a0611432760_0, v0x5a0611432840_0, v0x5a0611432910_0, v0x5a0611432ad0_0, v0x5a0611432a30_0 {0 0 0};
    %delay 30, 0;
    %vpi_call 2 49 "$finish" {0 0 0};
    %end;
    .thread T_0;
    .scope S_0x5a061140d690;
T_1 ;
    %vpi_call 2 53 "$dumpfile", "tb_ripple_carry_adder.vcd" {0 0 0};
    %vpi_call 2 54 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x5a061140d690 {0 0 0};
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "tb_ripple_carry_adder.v";
    "ripple_carry_adder.v";
