$date
	Mon Feb 24 00:48:25 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_ripple_carry_adder $end
$var wire 8 ! sum [7:0] $end
$var wire 1 " cout $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 1 % cin $end
$scope module uut $end
$var wire 8 & a [7:0] $end
$var wire 8 ' b [7:0] $end
$var wire 1 % cin $end
$var wire 8 ( sum [7:0] $end
$var wire 1 " cout $end
$var wire 8 ) carry [7:0] $end
$scope begin adder_loop[1] $end
$var parameter 2 * i $end
$scope module fa $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - cin $end
$var wire 1 . cout $end
$var wire 1 / sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[2] $end
$var parameter 3 0 i $end
$scope module fa $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 3 cin $end
$var wire 1 4 cout $end
$var wire 1 5 sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[3] $end
$var parameter 3 6 i $end
$scope module fa $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 cin $end
$var wire 1 : cout $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[4] $end
$var parameter 4 < i $end
$scope module fa $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? cin $end
$var wire 1 @ cout $end
$var wire 1 A sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[5] $end
$var parameter 4 B i $end
$scope module fa $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 E cin $end
$var wire 1 F cout $end
$var wire 1 G sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[6] $end
$var parameter 4 H i $end
$scope module fa $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 K cin $end
$var wire 1 L cout $end
$var wire 1 M sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[7] $end
$var parameter 4 N i $end
$scope module fa $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 Q cin $end
$var wire 1 R cout $end
$var wire 1 S sum $end
$upscope $end
$upscope $end
$scope module fa0 $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 % cin $end
$var wire 1 V cout $end
$var wire 1 W sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111 N
b110 H
b101 B
b100 <
b11 6
b10 0
b1 *
$end
#0
$dumpvars
0W
1V
1U
1T
0S
0R
0Q
0P
0O
0M
0L
0K
0J
0I
0G
0F
0E
0D
0C
0A
0@
0?
0>
0=
0;
0:
09
08
07
05
04
03
02
01
1/
0.
1-
0,
0+
b1 )
b10 (
b1 '
b1 &
0%
b1 $
b1 #
0"
b10 !
$end
#10
1"
1R
1Q
1L
1K
1F
1E
1@
1?
1:
19
14
13
0/
b11111111 )
1.
05
0;
0A
0G
0M
b0 !
b0 (
0S
1+
11
17
1=
1C
1I
1O
b11111111 #
b11111111 &
#20
0A
0M
1?
1K
1"
1:
1F
1R
0;
0G
0S
19
1E
1Q
14
1@
b11111111 )
1L
b0 !
b0 (
0W
12
1>
1J
01
0=
0I
0T
1%
b1010101 $
b1010101 '
b10101010 #
b10101010 &
#30
0"
0R
1S
0Q
0L
1M
0K
1;
0F
09
1G
04
0E
0@
1/
15
1A
0-
03
0?
0V
0.
b0 )
0:
b11111111 !
b11111111 (
1W
1,
18
0>
0J
0+
07
1=
1I
0%
b1111 $
b1111 '
b11110000 #
b11110000 &
#70
