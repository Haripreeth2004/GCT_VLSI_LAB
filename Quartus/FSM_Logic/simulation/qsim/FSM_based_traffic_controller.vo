// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "05/18/2025 22:41:14"

// 
// Device: Altera EP4CE115F29I7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module FSM_based_traffic_controller (
	reset,
	clock,
	c,
	NS_G,
	NS_R,
	EW_G,
	EW_R);
input 	reset;
input 	clock;
input 	c;
output 	NS_G;
output 	NS_R;
output 	EW_G;
output 	EW_R;

// Design Ports Information
// NS_G	=>  Location: PIN_G5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// NS_R	=>  Location: PIN_F3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// EW_G	=>  Location: PIN_E3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// EW_R	=>  Location: PIN_G6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset	=>  Location: PIN_H7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// c	=>  Location: PIN_D2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clock	=>  Location: PIN_D1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \NS_G~output_o ;
wire \NS_R~output_o ;
wire \EW_G~output_o ;
wire \EW_R~output_o ;
wire \reset~input_o ;
wire \clock~input_o ;
wire \c~input_o ;
wire \reg_fstate.EW~0_combout ;
wire \fstate.EW~q ;
wire \NS_G~0_combout ;
wire \NS_R~0_combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y67_N23
cycloneive_io_obuf \NS_G~output (
	.i(\NS_G~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\NS_G~output_o ),
	.obar());
// synopsys translate_off
defparam \NS_G~output .bus_hold = "false";
defparam \NS_G~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y66_N23
cycloneive_io_obuf \NS_R~output (
	.i(!\NS_R~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\NS_R~output_o ),
	.obar());
// synopsys translate_off
defparam \NS_R~output .bus_hold = "false";
defparam \NS_R~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y66_N16
cycloneive_io_obuf \EW_G~output (
	.i(!\NS_R~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\EW_G~output_o ),
	.obar());
// synopsys translate_off
defparam \EW_G~output .bus_hold = "false";
defparam \EW_G~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y67_N16
cycloneive_io_obuf \EW_R~output (
	.i(\NS_G~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\EW_R~output_o ),
	.obar());
// synopsys translate_off
defparam \EW_R~output .bus_hold = "false";
defparam \EW_R~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y68_N15
cycloneive_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y68_N8
cycloneive_io_ibuf \clock~input (
	.i(clock),
	.ibar(gnd),
	.o(\clock~input_o ));
// synopsys translate_off
defparam \clock~input .bus_hold = "false";
defparam \clock~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y68_N1
cycloneive_io_ibuf \c~input (
	.i(c),
	.ibar(gnd),
	.o(\c~input_o ));
// synopsys translate_off
defparam \c~input .bus_hold = "false";
defparam \c~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y68_N24
cycloneive_lcell_comb \reg_fstate.EW~0 (
// Equation(s):
// \reg_fstate.EW~0_combout  = (\c~input_o  & !\reset~input_o )

	.dataa(\c~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\reset~input_o ),
	.cin(gnd),
	.combout(\reg_fstate.EW~0_combout ),
	.cout());
// synopsys translate_off
defparam \reg_fstate.EW~0 .lut_mask = 16'h00AA;
defparam \reg_fstate.EW~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y68_N25
dffeas \fstate.EW (
	.clk(\clock~input_o ),
	.d(\reg_fstate.EW~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\fstate.EW~q ),
	.prn(vcc));
// synopsys translate_off
defparam \fstate.EW .is_wysiwyg = "true";
defparam \fstate.EW .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y68_N26
cycloneive_lcell_comb \NS_G~0 (
// Equation(s):
// \NS_G~0_combout  = (!\reset~input_o  & \fstate.EW~q )

	.dataa(\reset~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\fstate.EW~q ),
	.cin(gnd),
	.combout(\NS_G~0_combout ),
	.cout());
// synopsys translate_off
defparam \NS_G~0 .lut_mask = 16'h5500;
defparam \NS_G~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y68_N28
cycloneive_lcell_comb \NS_R~0 (
// Equation(s):
// \NS_R~0_combout  = (\reset~input_o ) # (\fstate.EW~q )

	.dataa(\reset~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\fstate.EW~q ),
	.cin(gnd),
	.combout(\NS_R~0_combout ),
	.cout());
// synopsys translate_off
defparam \NS_R~0 .lut_mask = 16'hFFAA;
defparam \NS_R~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign NS_G = \NS_G~output_o ;

assign NS_R = \NS_R~output_o ;

assign EW_G = \EW_G~output_o ;

assign EW_R = \EW_R~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
