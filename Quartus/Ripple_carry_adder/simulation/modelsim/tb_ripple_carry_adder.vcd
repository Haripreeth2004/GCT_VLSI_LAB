$date
	Thu Mar 20 09:27:19 2025
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module tb_ripple_carry_adder $end
$var reg 8 ! a [7:0] $end
$var reg 8 " b [7:0] $end
$var reg 1 # cin $end
$var wire 1 $ sum [7] $end
$var wire 1 % sum [6] $end
$var wire 1 & sum [5] $end
$var wire 1 ' sum [4] $end
$var wire 1 ( sum [3] $end
$var wire 1 ) sum [2] $end
$var wire 1 * sum [1] $end
$var wire 1 + sum [0] $end
$var wire 1 , cout $end

$scope module uut $end
$var wire 1 - a [7] $end
$var wire 1 . a [6] $end
$var wire 1 / a [5] $end
$var wire 1 0 a [4] $end
$var wire 1 1 a [3] $end
$var wire 1 2 a [2] $end
$var wire 1 3 a [1] $end
$var wire 1 4 a [0] $end
$var wire 1 5 b [7] $end
$var wire 1 6 b [6] $end
$var wire 1 7 b [5] $end
$var wire 1 8 b [4] $end
$var wire 1 9 b [3] $end
$var wire 1 : b [2] $end
$var wire 1 ; b [1] $end
$var wire 1 < b [0] $end
$var wire 1 = cin $end
$var wire 1 $ sum [7] $end
$var wire 1 % sum [6] $end
$var wire 1 & sum [5] $end
$var wire 1 ' sum [4] $end
$var wire 1 ( sum [3] $end
$var wire 1 ) sum [2] $end
$var wire 1 * sum [1] $end
$var wire 1 + sum [0] $end
$var wire 1 , cout $end
$var wire 1 > carry [7] $end
$var wire 1 ? carry [6] $end
$var wire 1 @ carry [5] $end
$var wire 1 A carry [4] $end
$var wire 1 B carry [3] $end
$var wire 1 C carry [2] $end
$var wire 1 D carry [1] $end
$var wire 1 E carry [0] $end

$scope begin adder_loop[7] $end
$var parameter 32 F i $end

$scope module fa $end
$var wire 1 - a $end
$var wire 1 5 b $end
$var wire 1 ? cin $end
$var wire 1 $ sum $end
$var wire 1 > cout $end
$upscope $end
$upscope $end

$scope begin adder_loop[6] $end
$var parameter 32 G i $end

$scope module fa $end
$var wire 1 . a $end
$var wire 1 6 b $end
$var wire 1 @ cin $end
$var wire 1 % sum $end
$var wire 1 ? cout $end
$upscope $end
$upscope $end

$scope begin adder_loop[5] $end
$var parameter 32 H i $end

$scope module fa $end
$var wire 1 / a $end
$var wire 1 7 b $end
$var wire 1 A cin $end
$var wire 1 & sum $end
$var wire 1 @ cout $end
$upscope $end
$upscope $end

$scope begin adder_loop[4] $end
$var parameter 32 I i $end

$scope module fa $end
$var wire 1 0 a $end
$var wire 1 8 b $end
$var wire 1 B cin $end
$var wire 1 ' sum $end
$var wire 1 A cout $end
$upscope $end
$upscope $end

$scope begin adder_loop[3] $end
$var parameter 32 J i $end

$scope module fa $end
$var wire 1 1 a $end
$var wire 1 9 b $end
$var wire 1 C cin $end
$var wire 1 ( sum $end
$var wire 1 B cout $end
$upscope $end
$upscope $end

$scope begin adder_loop[2] $end
$var parameter 32 K i $end

$scope module fa $end
$var wire 1 2 a $end
$var wire 1 : b $end
$var wire 1 D cin $end
$var wire 1 ) sum $end
$var wire 1 C cout $end
$upscope $end
$upscope $end

$scope begin adder_loop[1] $end
$var parameter 32 L i $end

$scope module fa $end
$var wire 1 3 a $end
$var wire 1 ; b $end
$var wire 1 E cin $end
$var wire 1 * sum $end
$var wire 1 D cout $end
$upscope $end
$upscope $end

$scope module fa0 $end
$var wire 1 4 a $end
$var wire 1 < b $end
$var wire 1 = cin $end
$var wire 1 + sum $end
$var wire 1 E cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 !
b1 "
0#
b1 L
b10 K
b11 J
b100 I
b101 H
b110 G
b111 F
0+
1*
0)
0(
0'
0&
0%
0$
0,
1E
0D
0C
0B
0A
0@
0?
0>
0=
1<
0;
0:
09
08
07
06
05
14
03
02
01
00
0/
0.
0-
$end
#10
b11111111 !
13
12
11
10
1/
1.
1-
1$
1%
1&
1'
1(
1)
0*
1D
0)
1C
0(
1B
0'
1A
0&
1@
0%
1?
0$
1>
1,
#20
b10101010 !
b1010101 "
1#
1:
18
16
04
02
00
0.
1=
#30
b11110000 !
b1111 "
0#
1;
19
08
06
03
01
10
1.
0=
1+
0E
1*
0D
1)
0C
1(
0B
1'
0A
1&
0@
1%
0?
1$
0>
0,
